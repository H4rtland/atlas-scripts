"""
Generate a temporary url to an object.

A temporary url to an object in an OpenStack container
can be generated by swift if there is a Temp-URL-Key
set on the storage cluster. The secret key only
needs to be set once, and should be more secure
than the "verysecretkey" used in this example.
If you want to generate a random key with Python,
try uuid.uuid4().hex.
"""

# Author: Thomas Hartland
# Email: t.hartland@lancaster.ac.uk

# Ignore warnings for Python 2.6 deprecation
import warnings
warnings.simplefilter("ignore", DeprecationWarning)
warnings.simplefilter("ignore", UserWarning)

import urllib2

import swiftclient
import swiftclient.service

from swift_connect import swift_connect


conn = swift_connect()

secret_key = "verysecretkey"
header = "Temp-URL-Key:%s" % secret_key

service = swiftclient.service.SwiftService()
options = {"meta":[header,]}
service.post(options=options)

# path format "/v1/container/object_name"
path_to_object = "/v1/example_container/example.file"

# time in seconds the temporary url will be valid for
valid_time = 3600

# Available methods are GET, PUT, HEAD, POST, DELETE
HTTP_method = "GET"

temp_url = swiftclient.utils.generate_temp_url(path_to_object, valid_time, secret_key, HTTP_method)

url_base = conn.url
if url_base.endswith("/v1"):
    url_base = url_base[:-3] # Strip the "/v1" from the end of the storage url
                               # since it's included in the temp url part.
print(url_base + temp_url)
